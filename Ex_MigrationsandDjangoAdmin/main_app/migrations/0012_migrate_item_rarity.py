# Generated by Django 5.0.4 on 2025-10-22 15:32

from django.db import migrations


def rarity_value_update(apps, schema_editor):
    ItemModel = apps.get_model('main_app', 'Item')

    items = ItemModel.objects.all()

    for item in items:
        if item.price <= 10:
            item.rarity_value = "Rare"
        elif item.price <= 20:
            item.rarity_value = "Very Rare"
        elif item.price <= 30:
            item.rarity_value = "Extremely Rare"
        elif item.price >= 31:
            item.rarity_value = "Mega Rare"
        item.save()

def reverse_rarity_value_update(apps, schema_editor):
    ItemModel = apps.get_model('main_app', 'Item')

    items = ItemModel.objects.all()

    default_field = ItemModel._meta.get_field('rarity_value').get_default()
    for item in items:
        item.rarity_value = default_field
        item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0011_item'),
    ]

    operations = [
        migrations.RunPython(code=rarity_value_update, reverse_code=reverse_rarity_value_update),
    ]
